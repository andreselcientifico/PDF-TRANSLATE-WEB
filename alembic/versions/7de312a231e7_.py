"""empty message

Revision ID: 7de312a231e7
Revises: 55cbf92dde46
Create Date: 2024-05-01 13:39:38.413334

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel

# revision identifiers, used by Alembic.
revision: str = '7de312a231e7'
down_revision: Union[str, None] = '55cbf92dde46'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('topic',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('locked', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_topic_name'), 'topic', ['name'], unique=True)
    op.create_table('userinfo',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('ext_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('enabled', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_userinfo_ext_id'), 'userinfo', ['ext_id'], unique=True)
    op.create_table('author',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('picture', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['userinfo.id'], ),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_index(op.f('ix_author_user_id'), 'author', ['user_id'], unique=True)
    op.create_table('entry',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('ts', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('author_id', sa.Integer(), nullable=False),
    sa.Column('topic_id', sa.Integer(), nullable=True),
    sa.Column('text', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('image', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('hidden', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['author_id'], ['author.user_id'], ),
    sa.ForeignKeyConstraint(['topic_id'], ['topic.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_entry_author_id'), 'entry', ['author_id'], unique=False)
    op.create_index(op.f('ix_entry_topic_id'), 'entry', ['topic_id'], unique=False)
    op.create_table('entryflags',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('entry_id', sa.Integer(), nullable=False),
    sa.Column('type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['entry_id'], ['entry.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['userinfo.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_entryflags_entry_id'), 'entryflags', ['entry_id'], unique=False)
    op.create_index(op.f('ix_entryflags_user_id'), 'entryflags', ['user_id'], unique=False)
    op.drop_index('ix_posts_content', table_name='posts')
    op.drop_index('ix_posts_title', table_name='posts')
    op.drop_table('posts')
    op.drop_table('likes')
    op.drop_index('ix_users_email', table_name='users')
    op.drop_index('ix_users_fullname', table_name='users')
    op.drop_index('ix_users_username', table_name='users')
    op.drop_table('users')
    op.create_index(op.f('ix_api_hug_user_id'), 'api_hug', ['user_id'], unique=True)
    op.create_foreign_key(None, 'api_hug', 'userinfo', ['user_id'], ['id'])
    op.drop_column('api_hug', 'id')
    op.create_index(op.f('ix_comments_post_id'), 'comments', ['post_id'], unique=True)
    op.create_index(op.f('ix_comments_user_id'), 'comments', ['user_id'], unique=True)
    op.create_foreign_key(None, 'comments', 'topic', ['post_id'], ['id'])
    op.create_foreign_key(None, 'comments', 'userinfo', ['user_id'], ['id'])
    op.drop_column('comments', 'id')
    op.add_column('embeddings', sa.Column('topic_id', sa.Integer(), nullable=False))
    op.create_index(op.f('ix_embeddings_topic_id'), 'embeddings', ['topic_id'], unique=True)
    op.create_foreign_key(None, 'embeddings', 'topic', ['topic_id'], ['id'])
    op.drop_column('embeddings', 'post_id')
    op.drop_column('embeddings', 'id')
    op.create_index(op.f('ix_notifications_user_id'), 'notifications', ['user_id'], unique=True)
    op.create_foreign_key(None, 'notifications', 'userinfo', ['user_id'], ['id'])
    op.drop_column('notifications', 'id')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('notifications', sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False))
    op.drop_constraint(None, 'notifications', type_='foreignkey')
    op.drop_index(op.f('ix_notifications_user_id'), table_name='notifications')
    op.add_column('embeddings', sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False))
    op.add_column('embeddings', sa.Column('post_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'embeddings', type_='foreignkey')
    op.drop_index(op.f('ix_embeddings_topic_id'), table_name='embeddings')
    op.drop_column('embeddings', 'topic_id')
    op.add_column('comments', sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False))
    op.drop_constraint(None, 'comments', type_='foreignkey')
    op.drop_constraint(None, 'comments', type_='foreignkey')
    op.drop_index(op.f('ix_comments_user_id'), table_name='comments')
    op.drop_index(op.f('ix_comments_post_id'), table_name='comments')
    op.add_column('api_hug', sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False))
    op.drop_constraint(None, 'api_hug', type_='foreignkey')
    op.drop_index(op.f('ix_api_hug_user_id'), table_name='api_hug')
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('username', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('password', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('created_at', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('fullname', sa.VARCHAR(), server_default=sa.text("'Anonymous'::character varying"), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='users_pkey')
    )
    op.create_index('ix_users_username', 'users', ['username'], unique=True)
    op.create_index('ix_users_fullname', 'users', ['fullname'], unique=False)
    op.create_index('ix_users_email', 'users', ['email'], unique=True)
    op.create_table('likes',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='likes_pkey')
    )
    op.create_table('posts',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('content', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='posts_pkey')
    )
    op.create_index('ix_posts_title', 'posts', ['title'], unique=False)
    op.create_index('ix_posts_content', 'posts', ['content'], unique=False)
    op.drop_index(op.f('ix_entryflags_user_id'), table_name='entryflags')
    op.drop_index(op.f('ix_entryflags_entry_id'), table_name='entryflags')
    op.drop_table('entryflags')
    op.drop_index(op.f('ix_entry_topic_id'), table_name='entry')
    op.drop_index(op.f('ix_entry_author_id'), table_name='entry')
    op.drop_table('entry')
    op.drop_index(op.f('ix_author_user_id'), table_name='author')
    op.drop_table('author')
    op.drop_index(op.f('ix_userinfo_ext_id'), table_name='userinfo')
    op.drop_table('userinfo')
    op.drop_index(op.f('ix_topic_name'), table_name='topic')
    op.drop_table('topic')
    # ### end Alembic commands ###
